version: "3"
# Internet General Computer
# Author: Matheus Santana Lima

# IGC is a virtual cloud machine, providing a standalone data-center emulation based on linux container systems.
# It has pre-builded applications servers running on a container. Each server runs in a isolated sandbox.
# The applications are exposed in a specific port number and IP address.
# You can use this to easily run a standalone lab and dev environment with remote desktop, databases, caches, web servers, and more
# The code is open source and compatible with many computing models (local and remote providers such as Cloud, Edge, self-hosted and On premises)

# Language: docker and bash
# Documentation:
# Version:
# Last update:
# Stable release

# Backlog:

# database: mongodb, postgress
# messages (email & IM)
# programming: python, R, shell
# simulators
# games
# writing: libreoffice
# calculation
# automation: jenkins
# programing: python
# cache: elasticsearch
# system management: portainer
# vpn


services:
  webserver-painel:
    user: root

    build:
      context: ./bin/webserver
    container_name: '7.3.x-webserver'
    restart: 'always'
    ports:
      #- "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
      #- "${HOST_MACHINE_SECURE_HOST_PORT}:443"
      - "8082:80"
      - "8443:443"
    #links:
    #  - mysql
    volumes:
      #- ${DOCUMENT_ROOT}:/var/www/html
      # centos
      #- ${PHP_INI}:/etc/php.ini
      # apache
      - ${PHP_INI}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR}:/etc/apache2/sites-enabled
      - ${APACHE_LOG_DIR}:/var/log/apache2


  mysql:
    build:
      context: "./bin/${DATABASE}"

    container_name: '5.7-mysql'
    restart: 'always'
    ports:
      #- "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
      - "${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_LOG_DIR}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'sc-phpmyadmin'
    restart: 'always'

    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      #PMA_USER: ${MYSQL_USER}
      #PMA_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '8080:80'
    volumes:
      - /sessions



  redis:
    container_name: 'sc-redis'
    image: redis:latest
    restart: 'always'

    ports:
      #- "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
      - "${HOST_MACHINE_REDIS_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}

    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

#  jenkins:
#    #image: 'bitnami/jenkins:2'
#    build:
#      context: "./bin/jenkins"
#    container_name: 'jenkins'

#    ports:
#      - '8081:8080'
#      - '8443:8443'
#      - '50000:50000'
#    volumes:
#      - 'jenkins_data:/bitnami'
#volumes:
#  jenkins_data:
#    driver: local


  jenkins-master:
    user: root
    restart: 'always'

    build:
      context: "./bin/ci_cd-jenkins"
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true"
    ports:
      - "50001:50000"
      - "8083:8080"
    volumes:
      - /var/jenkins_home


  ubuntu-desktop:
    restart: 'always'

    build:
      context: "./bin/desktop/docker-ubuntu-vnc-desktop"
    environment:
      VNC_PASSWORD: ${VNC_PASSWORD}
    ports:
      - "6080:80"
    volumes:
      - /dev/shm:/dev/shm
      #-

#owcloud




